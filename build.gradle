//声明gradle脚本自身需要使用的资源,优先执行
buildscript {
    ext {
        springBootVersion = '2.4.3'
    }

    repositories {
//        本地maven仓库
        mavenLocal()
        maven {
            url = 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
//和maven中央仓库一样的另一个依赖管理仓库,主要是java
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

//allprojects 所有项目共享的配置
allprojects {
    apply plugin: 'idea'
    apply plugin: 'java-library'

    group 'com.janlei'
    version = '1.0'
    sourceCompatibility = 15
    targetCompatibility = 15

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'


}
// subprojects : 所有子模块共享的配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
//    使用springboot插件
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    mainClassName = 'com.janlei.MonitorApplication'
// java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
// 配置所有子模块的依赖仓库地址
    repositories {
// 本地maven仓库
        mavenLocal()
        maven { url = 'http://maven.aliyun.com/nexus/content/groups/public/' }
//和maven中央仓库一样的另一个依赖管理仓库,主要是java
        jcenter()
    }
//所有子模块共有依赖
    dependencies {
// gradle5.0版本以上引入需要这种形式
        compileOnly 'org.projectlombok:lombok:1.18.8'
        annotationProcessor 'org.projectlombok:lombok:1.18.8'

//        api 'mysql:mysql-connector-java:8.0.15'
//        api 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'
//        api 'com.zaxxer:HikariCP'  // 连接池
//        api 'com.github.pagehelper:pagehelper:5.1.10'

        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation("org.junit.vintage:junit-vintage-engine") {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
    }

    test {
        useJUnitPlatform()
    }
}